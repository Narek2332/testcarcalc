let usdtToUsdRate = 1; // –ö—É—Ä—Å USDT/USD
let usdToRubRate = 75; // –ö—É—Ä—Å USD/RUB

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket Bybit –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ USDT/USD
const bybitWS = new WebSocket('wss://stream.bybit.com/v5/public/spot');

// –ù–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const usdtPriceElement = document.getElementById("usdt-price");

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Bybit WebSocket
bybitWS.onopen = () => {
    console.log('‚úÖ WebSocket Bybit –ø–æ–¥–∫–ª—é—á–µ–Ω');
    bybitWS.send(JSON.stringify({
        op: "subscribe",
        args: ["tickers.USDTUSD"] // ‚Üê –ü–†–ê–í–ò–õ–¨–ù–´–ô –¢–ò–ö–ï–†
    }));
};

// –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å USDT/USD –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
bybitWS.onmessage = (event) => {
    const data = JSON.parse(event.data);
    
    if (data?.topic === "tickers.USDTUSD" && data?.data?.lastPrice) {
        usdtToUsdRate = parseFloat(data.data.lastPrice);
        console.log(`üìà –ö—É—Ä—Å USDT/USD: ${usdtToUsdRate}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º HTML
        if (usdtPriceElement) {
            usdtPriceElement.innerText = `–ö—É—Ä—Å USDT/USD: ${usdtToUsdRate}`;
        }
    }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bybitWS.onerror = (error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ WebSocket:", error);
};


ws.onerror = (error) => {
    console.error('WebSocket –æ—à–∏–±–∫–∞:', error);
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ USD/RUB —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä
async function getUsdToRubRate() {
    try {
        const proxyUrl = "https://api.allorigins.win/get?url=";
        const apiUrl = encodeURIComponent("https://www.cbr-xml-daily.ru/daily_json.js");
        const response = await fetch(proxyUrl + apiUrl);
        const data = await response.json();
        const parsedData = JSON.parse(data.contents);

        usdToRubRate = parseFloat(parsedData.Valute.USD.Value);
        document.getElementById("usd-rub-rate").innerText = usdToRubRate.toFixed(2);
        console.log('–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å USD/RUB:', usdToRubRate);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ USD/RUB:", error);
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
async function calculate() {
    try {
        const price = parseFloat(document.getElementById('price').value);
        const country = document.getElementById('country').value;
        const declarant = document.getElementById('declarant').value;
        const engineType = document.getElementById('engineType').value;
        const engineVolume = document.getElementById('engineVolume').value;
        const age = document.getElementById('age').value;

        if (isNaN(price) || price <= 0) {
            alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ!");
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å USD/RUB
        await getUsdToRubRate();

        // –õ–æ–≥–∏—Å—Ç–∏–∫–∞
        let logisticsUsdt = country === "USA" ? 4105 : 4050;
        let logisticsRub = 110000; // –ë—Ä–æ–∫–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Å—Ç–∏–∫—É –≤ —Ä—É–±–ª–∏
        const logisticsUsd = logisticsUsdt * usdtToUsdRate;
        const logisticsTotal = logisticsUsd * usdToRubRate + logisticsRub;

        // –¢–∞–º–æ–∂–Ω—è
        let customs = price * 0.485; // 48.5% –æ—Ç —Ü–µ–Ω—ã –∞–≤—Ç–æ (–ø—Ä–∏–º–µ—Ä)

        // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
        const total = (price + customs) * usdToRubRate + logisticsTotal;
        document.getElementById('result').innerText = `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total.toFixed(2)} ‚ÇΩ`;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å.");
    }
}

// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫—É—Ä—Å USD/RUB –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
getUsdToRubRate();
