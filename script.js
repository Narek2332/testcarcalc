let usdtToRubRate = 91; // –ö—É—Ä—Å USDT/RUB
let usdToRubRate = 91; // –ö—É—Ä—Å USD/RUB

// –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É—Ä—Å–∞ USDT/RUB
const usdtRubRateElement = document.getElementById("usdt-rub-rate");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket Binance
function connectBinanceWebSocket() {
    const binanceWS = new WebSocket('wss://stream.binance.com:9443/ws/usdtrub@ticker');

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Binance WebSocket
    binanceWS.onopen = () => {
        console.log('‚úÖ WebSocket Binance –ø–æ–¥–∫–ª—é—á–µ–Ω');
    };

    // –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å USDT/RUB –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    binanceWS.onmessage = (event) => {
        const data = JSON.parse(event.data);
        
        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
        const usdtToRubRate = parseFloat(data.c); // –ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞
        console.log(`üìà –ö—É—Ä—Å USDT/RUB: ${usdtToRubRate}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º HTML
        if (usdtRubRateElement) {
            usdtRubRateElement.innerText = usdtToRubRate.toFixed(2); // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 2 –∑–Ω–∞–∫–æ–≤
        }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    binanceWS.onerror = (error) => {
        console.error("‚ùå –û—à–∏–±–∫–∞ WebSocket:", error);
        if (usdtRubRateElement) {
            usdtRubRateElement.innerText = "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏";
        }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    binanceWS.onclose = () => {
        console.log('WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ. –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');
        if (usdtRubRateElement) {
            usdtRubRateElement.innerText = "–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...";
        }

        // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            connectBinanceWebSocket(); // –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        }, 5000);
    };
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket Binance
connectBinanceWebSocket();


// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ USD/RUB —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä
async function getUsdToRubRate() {
    try {
        const proxyUrl = "https://api.allorigins.win/get?url=";
        const apiUrl = encodeURIComponent("https://www.cbr-xml-daily.ru/daily_json.js");
        const response = await fetch(proxyUrl + apiUrl);
        const data = await response.json();
        const parsedData = JSON.parse(data.contents);

        usdToRubRate = parseFloat(parsedData.Valute.USD.Value);
        document.getElementById("usd-rub-rate").innerText = usdToRubRate.toFixed(2);
        console.log('–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å USD/RUB:', usdToRubRate);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–∞ USD/RUB:", error);
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
async function calculate() {
    try {
        const price = parseFloat(document.getElementById('price').value);
        const country = document.getElementById('country').value;
        const declarant = document.getElementById('declarant').value;
        const engineType = document.getElementById('engineType').value;
        const engineVolume = document.getElementById('engineVolume').value;
        const age = document.getElementById('age').value;

        if (isNaN(price) || price <= 0) {
            alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ!");
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫—É—Ä—Å USD/RUB
        await getUsdToRubRate();

        // –õ–æ–≥–∏—Å—Ç–∏–∫–∞
        let logisticsUsdt = country === "USA" ? 4105 : 4050;
        let logisticsRub = 110000; // –ë—Ä–æ–∫–µ—Ä—Å–∫–∏–µ —É—Å–ª—É–≥–∏ / –ï–õ–ü–¢–°

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏—Å—Ç–∏–∫—É –≤ —Ä—É–±–ª–∏
        const logisticsRubC = logisticsUsdt * usdtToRubRate;
        const logisticsTotal = logisticsRubC + logisticsRub;

        // –¢–∞–º–æ–∂–Ω—è
        let customs = 0;
        if (age === "0-3") {
            customs = price * 0.485; // 48.5%
        } else {
            if (declarant === "individual") {
                if (engineType === "petrol-diesel") {
                    if (engineVolume === "1.5-2.0") customs = 5700;
                    else if (engineVolume === "2.0-2.5") customs = 7860;
                    else if (engineVolume === "2.5-3.0") customs = 9400;
                }
                if (age === "5-7") {
                    if (engineVolume === "1.5-2.0") customs = 10000;
                    else if (engineVolume === "2.0-2.5") customs = 13000;
                    else if (engineVolume === "2.5-3.0") customs = 15600;
                }
            } else if (declarant === "legal") {
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π —É—Ç–∏–ª—å –¥–ª—è —é—Ä. –ª–∏—Ü
                const util = engineVolume === "1.5-2.0" ? 1174000 : 2840000;
                if (engineType === "petrol-diesel") {
                    if (engineVolume === "1.5-2.0") customs = 5700 * usdToRubRate + util;
                    else if (engineVolume === "2.0-2.5") customs = 7860 * usdToRubRate + util;
                    else if (engineVolume === "2.5-3.0") customs = 9400 * usdToRubRate + util;
                }
                if (age === "5-7") {
                    if (engineVolume === "1.5-2.0") customs = 10000 * usdToRubRate + util;
                    else if (engineVolume === "2.0-2.5") customs = 13000 * usdToRubRate + util;
                    else if (engineVolume === "2.5-3.0") customs = 15600 * usdToRubRate + util;
                }
            }
        }

        // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
        const total = (price + customs) * usdToRubRate + logisticsTotal;
        document.getElementById('result').innerText = `–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total.toFixed(2)} ‚ÇΩ`;
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞:", error);
        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.");
    }
}


// –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫—É—Ä—Å USD/RUB –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
getUsdToRubRate();
